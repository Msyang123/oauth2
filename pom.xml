<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
<modelVersion>4.0.0</modelVersion>

<!-- 创建子项目时，会自动添加module。如果删除、改名等，需要在这里手动修改 -->
<modules>
    <module>authorization-service</module>
    <module>resource-service</module>
    <module>user-service</module>
</modules>

<!-- spring-boot项目必须派生于此 -->
<parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>1.5.12.RELEASE</version>
    <relativePath/>
</parent>

<!-- 定义父工程groupId、artifactId等配置 -->
<groupId>moe.cnkirito</groupId>
<artifactId>oauth2-demo</artifactId>
<name>${project.artifactId}</name>
<!-- 工程版本号。应与GIT分支对应（包括配置仓库）。此版本号还将决定是否发布RELEASE版本 -->
<version>1.0.0-SNAPSHOT</version>
<!-- 标识父工程为POM工程，不会生成jar -->
<packaging>pom</packaging>

<!-- 定义一系列变量，可以在本工程和子孙工程中通过${xx}来引用 -->
<properties>
    <java.version>1.8</java.version>
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <microx.version>20180520</microx.version>
    <spring-cloud.version>Dalston.SR5</spring-cloud.version>
    <spring-boot.version>${project.parent.version}</spring-boot.version>
    <docker.host>http://127.0.0.1:2376</docker.host>
    <docker.registry>127.0.0.1</docker.registry>
</properties>

<!-- 定义一系列jar，子工程默认会继承这些jar包 -->
<dependencies>
    <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
    </dependency>
    <!-- jmx -->
    <dependency>
        <groupId>org.jolokia</groupId>
        <artifactId>jolokia-core</artifactId>
    </dependency>
    <!-- endpoints -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <!-- utils -->
    <dependency>
        <groupId>com.leon.microx.util</groupId>
        <artifactId>microx-utils</artifactId>
        <version>${microx.version}</version>
    </dependency>
    <!-- probe -->
    <dependency>
        <groupId>com.leon.microx.common</groupId>
        <artifactId>probe-spring-boot-starter</artifactId>
        <version>${microx.version}</version>
    </dependency>

    <!-- Hot Deploy -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-devtools</artifactId>
        <scope>test</scope>
    </dependency>

    <!-- test -->
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <scope>test</scope>
    </dependency>
</dependencies>

<!-- 定义一些jar，子工程可以通过dependencies节点导入。用于统一版本 -->
<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring-cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>
    </dependencies>
</dependencyManagement>

<!-- 定义私有仓库snapshots库 和releases库地址。（配合settings.xml使用） -->
<distributionManagement>
    <repository>
        <id>nexus-releases</id>
        <name>Nexus Release Repository</name>
        <url>http://172.16.10.199:8081/nexus/content/repositories/releases/</url>
    </repository>

    <snapshotRepository>
        <id>nexus-snapshots</id>
        <name>Nexus Snapshot Repository</name>
        <url>http://172.16.10.199:8081/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>
</distributionManagement>

<build>
    <!-- 定义一些plugin，子工程可以通过plugins节点引入，用于统一配置 -->
    <pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </pluginManagement>

    <!-- 定义一些plugin，子工程默认继承这些plugin -->
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
                <skip>true</skip>
            </configuration>
        </plugin>
    </plugins>
</build>
</project>